import reducers from '@/app/reducers';import {context, IO} from '@/app/io';//配置接口参数context.create('growthCycle', {  listByPagedata: {   mockUrl: '/proxy/workPeriod/listByPage',   url: '/workPeriod/listByPage',   method: 'POST'  },  Adddata: {    mockUrl: '/proxy/workPeriod/add',    url: '/workPeriod/add',    method: 'POST'  },  deleteData: {    mockUrl: '',    rest: true  },  Modifydata: {    mockUrl: '/proxy/workPeriod/update',    url: '/workPeriod/update',    method: 'POST'  },  ModifydataName: {      mockUrl: '/proxy/workPeriod/updateName',      url: '/workPeriod/updateName',      method: 'POST'  },  CheckName: {      mockUrl: '/proxy/workPeriod/checkName',      url: '/workPeriod/checkName',      method: 'GET'  },  TreeData: {    mockUrl: '',    rest: true  }});//封装页面reducer、actionconst farmingModel = {  reducer: (defaultState = {    Alldate:[],    total:null,    parentname:null,    PID:null,    Psize:10,    Cur:1,    fields:{},    TreeD:[],    addflag:false,    modalflag:false,    modaltype:'',    parentID:null,    slideID:-1,    modifyID:null,    chooseCUR:1,    chooseSIZE:10,    slideparentID:-1,    slideName:'生长周期维护'  }, action) => {    const fields = action.data;    switch (action.type) {      case 'GROWTH_ALL_DATA': {        const Alldate = action.data;        const total = action.total;        return Object.assign({}, defaultState, {          Alldate:Alldate,          total:total,          chooseflag:false        });      }        case 'GROWTH_QUERY_ALL': {          const queryAlls = action.data;          const querytotal = action.querytotal;          return Object.assign({}, defaultState, {            Alldate:queryAlls,            total:querytotal          });        }        case 'GROWTH_MENU_ALL':        return Object.assign({}, defaultState, {          Alldate:action.arr,          total:action.num          //chooseflag:true        });//        case 'GROWTH_CHOOSE_ALL': {//          const chooseAlls = action.chooseall;//          const choosetotal = action.choosetotal;//          return Object.assign({}, defaultState, {//            Alldate:chooseAlls,//            total:choosetotal//          });//        }        case 'GROWTH_SUPERIOR_NAME':        return Object.assign({}, defaultState, {          parentname:action.Name        });        case 'GROWTH_RES_PAGE':        return Object.assign({}, defaultState, {          Cur:action.cur,          Psize:action.psize        });        case 'GROWTH_MODAL':        return Object.assign({}, defaultState, {          modalflag:action.modalflag,          modaltype:action.modaltype        });        case 'GROWTH_DEFAULTFIELD':        return Object.assign({}, defaultState, {fields: fields});        case 'GROWTH_TREE_DATAs':        return Object.assign({}, defaultState, {          TreeD:action.tree        });        case 'GROWTH_SLIDEID':        return Object.assign({}, defaultState, {          slideID:action.num,          slideName:action.slideName,          slideparentID:action.slideparentID        });        case 'GROWTH_PARENTID':        return Object.assign({}, defaultState, {          parentID:action.parentid,          modifyID:action.modifyid        });        case 'GROWTH_CHOOSEPAGE':        return Object.assign({}, defaultState, {          chooseCUR:action.chooseCUR,          chooseSIZE:action.chooseSIZE        });    }    return defaultState;  },  action: (dispatch) => {    return {      superiorName:(parent) => {  //点击左边树的数据        dispatch({          type: "GROWTH_SUPERIOR_NAME",          Name:parent.name,          parentid:parent.parentID,          pID:parent.parentLeftID        });      },      // 查询      Alldatas: ( page ) => {  //进入页面的列表数据        page.companyId = 1;        page.userId = 1;        page.desc = 0;        page.field = "name";        IO.growthCycle.listByPagedata(page).then((res) => {          const data=res.data.rows||[];          const total=res.data.total;          dispatch({            type: "GROWTH_ALL_DATA",            data,            total          });        }).catch();      },      queryAll: (req) => {  //筛选的列表数据        req.companyId = 1;        req.userId = 1;        req.desc = 0;        req.field = "name";        IO.growthCycle.listByPagedata(req).then((res) => {          const querytotal=res.data.total;          const data = res.data.rows;          dispatch({            type: "GROWTH_QUERY_ALL",            data,            querytotal          });        }).catch();      },       page:(obj) => {  //分页页码          dispatch({            type: "GROWTH_RES_PAGE",            cur:obj.current,            psize:obj.pageSize           });       },       choosepage:(obj) => {         dispatch({           type: "GROWTH_CHOOSEPAGE",           chooseCUR:obj.current,           chooseSIZE:obj.pageSize         });       },      // 创建      defaultFields:(data) => {  //弹出框的数据        dispatch({          type: "GROWTH_DEFAULTFIELD",          data        });       },      modal:(obj) => {  //弹出框是否显示        dispatch({          type: "GROWTH_MODAL",          modalflag:obj.modalFlag,          modaltype:obj.modeltype        });      }    };  }};reducers.assemble = {growthReducer: farmingModel.reducer};const action = farmingModel.action;const IOModel = {  TreeMOdel:IO.growthCycle.TreeData,  Delete:IO.growthCycle.deleteData,  Adddata:IO.growthCycle.Adddata,  Modifydata:IO.growthCycle.Modifydata,  ModifydataName:IO.growthCycle.ModifydataName,  CheckName:IO.growthCycle.CheckName};export {  action,  IO,  IOModel};