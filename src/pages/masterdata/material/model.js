import reducers from '@/app/reducers';import {context, IO} from '@/app/io';//配置接口参数context.create('agriculturalMaintenance', {    listByPagedata: {        mockUrl: '/proxy/astMaterials/listByPage',        url: '/astMaterials/listByPage',        method: 'POST'    },    Adddata: {        mockUrl: '/proxy/astMaterials/add',        url: '/astMaterials/add',        method: 'POST'    },    deleteData: {        mockUrl: '',        rest: true    },    GetOne: {        mockUrl: '/proxy/astMaterials/getById',        url: '/astMaterials/getById',        method: 'GET'    },    Modifydata: {        mockUrl: '/proxy/astMaterials/update',        url: '/astMaterials/update',        method: 'POST'    },    CheckName: {        mockUrl: '/proxy/astMaterials/checkNameUnique',        url: '/astMaterials/checkNameUnique',        method: 'POST'    },    TreeData: {        mockUrl: '',        rest: true    }});//封装页面reducer、actionconst farmingModel = {    reducer: (defaultState = {        EditData: {},        Alldate: [],        total: null,        parentname: null,        PID: null,        Psize: 10,        Cur: 1,        fields: {},        TreeD: [],        addflag: false,        modalflag: false,        modaltype: '',        parentID: null,        slideID: -1,        modifyID: null,        chooseCUR: 1,        chooseSIZE: 10,        slideparentID: -1,        slideName: '农资'    }, action) => {        const fields = action.data;        switch (action.type) {            case 'AGR_ALL_DATA': {                const Alldate = action.data;                const total = action.total;                return Object.assign({}, defaultState, {                    Alldate: Alldate,                    total: total,                    chooseflag: false                });            }            case 'AGR_QUERY_ALL': {                const queryAlls = action.data;                const querytotal = action.querytotal;                return Object.assign({}, defaultState, {                    Alldate: queryAlls,                    total: querytotal                });            }            case 'AGR_GET_ONE': {                const queryAlls = action.data;                return Object.assign({}, defaultState, {                    EditData: queryAlls                });            }            case 'AGR_MENU_ALL':                return Object.assign({}, defaultState, {                    Alldate: action.arr,                    total: action.num                    //chooseflag:true                });//        case 'AGR_CHOOSE_ALL': {//          const chooseAlls = action.chooseall;//          const choosetotal = action.choosetotal;//          return Object.assign({}, defaultState, {//            Alldate:chooseAlls,//            total:choosetotal//          });//        }            case 'AGR_SUPERIOR_NAME':                return Object.assign({}, defaultState, {                    parentname: action.Name                });            case 'AGR_RES_PAGE':                return Object.assign({}, defaultState, {                    Cur: action.cur,                    Psize: action.psize                });            case 'AGR_MODAL':                return Object.assign({}, defaultState, {                    modalflag: action.modalflag,                    modaltype: action.modaltype                });            case 'AGR_DEFAULTFIELD':                return Object.assign({}, defaultState, {fields: fields});            case 'AGR_TREE_DATAs':                return Object.assign({}, defaultState, {                    TreeD: action.tree                });            case 'AGR_SLIDEID':                return Object.assign({}, defaultState, {                    slideID: action.num,                    slideName: action.slideName,                    slideparentID: action.slideparentID                });            case 'AGR_PARENTID':                return Object.assign({}, defaultState, {                    parentID: action.parentid,                    modifyID: action.modifyid                });            case 'AGR_CHOOSEPAGE':                return Object.assign({}, defaultState, {                    chooseCUR: action.chooseCUR,                    chooseSIZE: action.chooseSIZE                });        }        return defaultState;    },    action: (dispatch) => {        return {            superiorName: (parent) => {  //点击左边树的数据                dispatch({                    type: "AGR_SUPERIOR_NAME",                    Name: parent.name,                    parentid: parent.parentID,                    pID: parent.parentLeftID                });            },            //    查询            Alldatas: (page) => {  //进入页面的列表数据                page.companyId = 1;                IO.agriculturalMaintenance.listByPagedata(page).then((res) => {                    const data = res.data.rows || [];                    const total = res.data.total;                    dispatch({                        type: "AGR_ALL_DATA",                        data,                        total                    });                }).catch();            },            queryAll: (req) => {  //筛选的列表数据                req.companyId = 1;                req.userId = 1;                req.desc = 0;                req.field = "name";                IO.agriculturalMaintenance.listByPagedata(req).then((res) => {                    const querytotal = res.data.total;                    const data = res.data.rows;                    dispatch({                        type: "AGR_QUERY_ALL",                        data,                        querytotal                    });                }).catch();            },            getOne: async (req) => {  //筛选的列表数据                req.userId = 1;                const res = await IO.agriculturalMaintenance.GetOne(req);                const data = res.data;                dispatch({                    type: "AGR_GET_ONE",                    data                });            },            page: (obj) => {  //分页页码                dispatch({                    type: "AGR_RES_PAGE",                    cur: obj.current,                    psize: obj.pageSize                });            },            choosepage: (obj) => {                dispatch({                    type: "AGR_CHOOSEPAGE",                    chooseCUR: obj.current,                    chooseSIZE: obj.pageSize                });            },            // 创建            defaultFields: (data) => {  //弹出框的数据                dispatch({                    type: "AGR_DEFAULTFIELD",                    data                });            },            modal: (obj) => {  //弹出框是否显示                dispatch({                    type: "AGR_MODAL",                    modalflag: obj.modalFlag,                    modaltype: obj.modeltype                });            }        };    }};reducers.assemble = {agriculturalMaintenanceReducer: farmingModel.reducer};const action = farmingModel.action;const IOModel = {    TreeMOdel: IO.agriculturalMaintenance.TreeData,    Delete: IO.agriculturalMaintenance.deleteData,    Adddata: IO.agriculturalMaintenance.Adddata,    Modifydata: IO.agriculturalMaintenance.Modifydata,    CheckName: IO.agriculturalMaintenance.CheckName};const MaterialIOModel = {    GetOne: IO.agriculturalMaintenance.GetOne};export {    action,    IO,    IOModel,    MaterialIOModel};