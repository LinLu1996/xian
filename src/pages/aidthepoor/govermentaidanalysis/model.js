import reducers from '@/app/reducers';import {context, IO} from '@/app/io';//配置接口参数context.create('govAidAnalysis', {    PoorListByMonth: {        mockUrl: 'proxy/WorkHireRecordDTO/poorListByMonthReport',        url: '/WorkHireRecordDTO/poorListByMonthReport',        method: 'POST'    },    poorYear: {        mockUrl: 'proxy/WorkHireRecordDTO/poorYear/:companyId',        url: '/WorkHireRecordDTO/poorYear/:companyId',        method: 'GET',        rest: true    },    deleteData: {        mockUrl: '',        rest: true    },    TreeData: {        mockUrl: '',        rest: true    }});//封装页面reducer、actionconst farmingModel = {    reducer: (defaultState = {        goTotal: 0,        entTotal: 0,        GoBar: [],        EntBar: [],        EditData: {},        Alldate: [],        total: null,        parentname: null,        PID: null,        Psize: 10,        Cur: 1,        fields: {},        TreeD: [],        addflag: false,        modalflag: false,        modaltype: '',        parentID: null,        slideID: -1,        modifyID: null,        chooseCUR: 1,        chooseSIZE: 10,        slideparentID: -1,        slideName: '基地'    }, action) => {        const fields = action.data;        switch (action.type) {            case 'GOV_AID_ALL_DATA': {                const goTotal = action.goTotal;                const entTotal = action.entTotal;                const GoBar = action.go;                const EntBar = action.ent;                const Alldate = action.dataSource;                const total = action.total;                return Object.assign({}, defaultState, {                    goTotal: goTotal,                    entTotal: entTotal,                    GoBar: GoBar,                    EntBar: EntBar,                    Alldate: Alldate,                    total: total,                    chooseflag: false                });            }            case 'GOV_AID_QUERY_ALL': {                const queryAlls = action.data;                const querytotal = action.querytotal;                return Object.assign({}, defaultState, {                    Alldate: queryAlls,                    total: querytotal                });            }            case 'GOV_AID_GET_ONE': {                const queryAlls = action.data;                return Object.assign({}, defaultState, {                    EditData: queryAlls                });            }            case 'GOV_AID_MENU_ALL':                return Object.assign({}, defaultState, {                    Alldate: action.arr,                    total: action.num                    //chooseflag:true                });//        case 'GOV_AID_CHOOSE_ALL': {//          const chooseAlls = action.chooseall;//          const choosetotal = action.choosetotal;//          return Object.assign({}, defaultState, {//            Alldate:chooseAlls,//            total:choosetotal//          });//        }            case 'GOV_AID_SUPERIOR_NAME':                return Object.assign({}, defaultState, {                    parentname: action.Name                });            case 'GOV_AID_RES_PAGE':                return Object.assign({}, defaultState, {                    Cur: action.cur,                    Psize: action.psize                });            case 'GOV_AID_MODAL':                return Object.assign({}, defaultState, {                    modalflag: action.modalflag,                    modaltype: action.modaltype                });            case 'GOV_AID_DEFAULTFIELD':                return Object.assign({}, defaultState, {fields: fields});            case 'GOV_AID_TREE_DATAs':                return Object.assign({}, defaultState, {                    TreeD: action.tree                });            case 'GOV_AID_SLIDEID':                return Object.assign({}, defaultState, {                    slideID: action.num,                    slideName: action.slideName,                    slideparentID: action.slideparentID                });            case 'GOV_AID_PARENTID':                return Object.assign({}, defaultState, {                    parentID: action.parentid,                    modifyID: action.modifyid                });            case 'GOV_AID_CHOOSEPAGE':                return Object.assign({}, defaultState, {                    chooseCUR: action.chooseCUR,                    chooseSIZE: action.chooseSIZE                });        }        return defaultState;    },    action: (dispatch) => {        return {            superiorName: (parent) => {  //点击左边树的数据                dispatch({                    type: "GOV_AID_SUPERIOR_NAME",                    Name: parent.name,                    parentid: parent.parentID,                    pID: parent.parentLeftID                });            },            //    查询            Alldatas: (page) => {  //进入页面的列表数据                page.companyId = 1;                IO.govAidAnalysis.PoorListByMonth(page).then((res) => {                    const data = res.data || [];                    const goverment = data.rowGovernment;                    const company = data.rowCompany;                    let go = [];                    let ent = [];                    let goTotal = 0;                    let entTotal = 0;                    const dataSource = [];                    const source1 = {};                    if (goverment && goverment.length > 0) {                        source1.type = '政府扶贫投入（元）';                        source1.all = data.allPayByGovernment;                        for (let i = 0; i < goverment.length; i++) {                            if (goverment[i].month === '1') {                                source1.Jan = goverment[i].sumPay;                            } else if (goverment[i].month === '2') {                                source1.Feb = goverment[i].sumPay;                            } else if (goverment[i].month === '3') {                                source1.Mar = goverment[i].sumPay;                            } else if (goverment[i].month === '4') {                                source1.Apr = goverment[i].sumPay;                            } else if (goverment[i].month === '5') {                                source1.May = goverment[i].sumPay;                            } else if (goverment[i].month === '6') {                                source1.Jun = goverment[i].sumPay;                            } else if (goverment[i].month === '7') {                                source1.Jul = goverment[i].sumPay;                            } else if (goverment[i].month === '8') {                                source1.Aug = goverment[i].sumPay;                            } else if (goverment[i].month === '9') {                                source1.Sep = goverment[i].sumPay;                            } else if (goverment[i].month === '10') {                                source1.Oct = goverment[i].sumPay;                            } else if (goverment[i].month === '11') {                                source1.Nov = goverment[i].sumPay;                            } else if (goverment[i].month === '12') {                                source1.Dec = goverment[i].sumPay;                            }                        }                        dataSource.push(source1);                    }                    const source2 = {};                    if (company && company.length > 0) {                        source2.type = '企业扶贫支出（元）';                        source2.all = data.allPayByCompany;                        for (let i = 0; i < company.length; i++) {                            if (company[i].month === '1') {                                source2.Jan = company[i].sumPay;                            } else if (company[i].month === '2') {                                source2.Feb = company[i].sumPay;                            } else if (company[i].month === '3') {                                source2.Mar = company[i].sumPay;                            } else if (company[i].month === '4') {                                source2.Apr = company[i].sumPay;                            } else if (company[i].month === '5') {                                source2.May = company[i].sumPay;                            } else if (company[i].month === '6') {                                source2.Jun = company[i].sumPay;                            } else if (company[i].month === '7') {                                source2.Jul = company[i].sumPay;                            } else if (company[i].month === '8') {                                source2.Aug = company[i].sumPay;                            } else if (company[i].month === '9') {                                source2.Sep = company[i].sumPay;                            } else if (company[i].month === '10') {                                source2.Oct = company[i].sumPay;                            } else if (company[i].month === '11') {                                source2.Nov = company[i].sumPay;                            } else if (company[i].month === '12') {                                source2.Dec = company[i].sumPay;                            }                        }                        dataSource.push(source2);                    }                    for (let i = 0; i < dataSource.length; i++) {                        if (dataSource[i] && dataSource[i].type === "政府扶贫投入（元）") {                            go = Object.keys(dataSource[0]).map(function (el) {                                return dataSource[0][el];                            });                            goTotal = dataSource[0].all;                            go.splice(0, 1);                            go.splice(0, 1);                        }                        if (dataSource[i] && dataSource[i].type === "企业扶贫支出（元）") {                            ent = Object.keys(dataSource[1]).map(function (el) {                                return dataSource[1][el];                            });                            entTotal = dataSource[1].all;                            ent.splice(0, 1);                            ent.splice(0, 1);                        }                    }                    const total = dataSource.length;                    dispatch({                        type: "GOV_AID_ALL_DATA",                        goTotal,                        entTotal,                        go,                        ent,                        dataSource,                        total                    });                }).catch();            },            queryAll: (req) => {  //筛选的列表数据                req.companyId = 1;                IO.govAidAnalysis.PoorListByMonth(req).then((res) => {                    const querytotal = res.data.total;                    const data = res.data.rows;                    dispatch({                        type: "GOV_AID_QUERY_ALL",                        data,                        querytotal                    });                }).catch();            },            getOne: async (req) => {  //编辑单个时获取数据                const res = await IO.govAidAnalysis.GetOne(req);                const data = res.data;                if (data.stauts === 0) {                    data.stauts = '正常';                } else if (data.stauts === 1) {                    data.stauts = '禁用';                }                dispatch({                    type: "GOV_AID_GET_ONE",                    data                });            },            page: (obj) => {  //分页页码                dispatch({                    type: "GOV_AID_RES_PAGE",                    cur: obj.current,                    psize: obj.pageSize                });            },            choosepage: (obj) => {                dispatch({                    type: "GOV_AID_CHOOSEPAGE",                    chooseCUR: obj.current,                    chooseSIZE: obj.pageSize                });            },            // 创建            defaultFields: (data) => {  //弹出框的数据                dispatch({                    type: "GOV_AID_DEFAULTFIELD",                    data                });            },            modal: (obj) => {  //弹出框是否显示                dispatch({                    type: "GOV_AID_MODAL",                    modalflag: obj.modalFlag,                    modaltype: obj.modeltype                });            }        };    }};reducers.assemble = {govAidAnalysisReducer: farmingModel.reducer};const action = farmingModel.action;const IOModel = {    TreeMOdel: IO.govAidAnalysis.TreeData,    Delete: IO.govAidAnalysis.deleteData,    Adddata: IO.govAidAnalysis.Adddata,    Modifydata: IO.govAidAnalysis.Modifydata,    CheckName: IO.govAidAnalysis.CheckName,    PoorListByMonth:IO.govAidAnalysis.PoorListByMonth,    poorYear: IO.govAidAnalysis.poorYear};export {    action,    IO,    IOModel};